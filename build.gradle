buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'maven'
//apply plugin: 'java'



def mcVersion = "1.16.5"
def modVersion = "1.0"
def buildVersion = "0006"
def buildType = "alpha" // alpha, beta, release

group = "genelectrovise.magiksmostevile" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "magiksmostevile"
version = "MC-" + mcVersion + "_" + buildType + "-" + modVersion + "-" + buildVersion

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Add dependencies
dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.42'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.12'

}

// Ensure that sources and javadocs are updated with the project (use scripts/ folder for helper .ps1 scripts)
eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "magiksmostevile",
            "Specification-Vendor": "GenElectrovise",
            "Specification-Version": "${version}", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"GenElectrovise",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Finialise the jar file by reobfuscating it
jar.finalizedBy('reobfJar') 

// Publishing the jar requires that it is reobfuscated
//publish.dependsOn('reobfJar')

// Publish - Publish a new GitHub release
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/genelectrovise/magiksmostevile")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
		
		maven {
            name = "LocalMaven"
            url = uri("file:///${project.projectDir}/mcmodsrepo")
        }
    }
	
    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName
            version = version

			artifact jar
        }
    }
}

// Cursegradle - Publish the artifact to curseforge https://www.curseforge.com/minecraft/mc-mods/magiksmostevile/
curseforge {
	apiKey = project.findProperty("curseforge.key") // This should really be in a gradle.properties file
	println('Using apikey: ' + apiKey)
  	project {
   		id = '391212' //Found in project description -> 'About Project' sidebar -> Project ID
    	changelog = file('changelog.md') // A file can also be set using: changelog = file('changelog.txt')
    	releaseType = buildType
    	
    	mainArtifact(jar) {
    		displayName = archivesBaseName + '-' + version
    		//relations {
       	 	//requiredDependency 'railcraft' // Railcraft is required
        	//embeddedLibrary 'cofhlib' // CoFH Lib is shipped with the artifact
        	//optionalDependency 'notenoughitems' // Not Enough Items is an optional addon
        	//tool 'worldedit' // World Edit is a compatible tool
        	//incompatible 'buildcraft' // BuildCraft is not compatible
      		//}
    	}
  	}
}